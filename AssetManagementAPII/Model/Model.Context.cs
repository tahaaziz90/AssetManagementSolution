//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AssetManagementEntities : DbContext
    {
        public AssetManagementEntities()
            : base("name=AssetManagementEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Asset> Assets { get; set; }
        public virtual DbSet<AssetDisposal> AssetDisposals { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Currency> Currencies { get; set; }
        public virtual DbSet<Disposal> Disposals { get; set; }
        public virtual DbSet<DisposalDetail> DisposalDetails { get; set; }
        public virtual DbSet<Location> Locations { get; set; }
        public virtual DbSet<Movement> Movements { get; set; }
        public virtual DbSet<Permission> Permissions { get; set; }
        public virtual DbSet<Purchase> Purchases { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<RolePermission> RolePermissions { get; set; }
        public virtual DbSet<Supplier> Suppliers { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UserRole> UserRoles { get; set; }
        public virtual DbSet<Branch> Branches { get; set; }
        public virtual DbSet<BranchUser> BranchUsers { get; set; }
        public virtual DbSet<Company> Companies { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
    
        public virtual ObjectResult<asm_getCategory_Result> asm_getCategory(Nullable<int> parentId, Nullable<int> branchId)
        {
            var parentIdParameter = parentId.HasValue ?
                new ObjectParameter("parentId", parentId) :
                new ObjectParameter("parentId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("branchId", branchId) :
                new ObjectParameter("branchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<asm_getCategory_Result>("asm_getCategory", parentIdParameter, branchIdParameter);
        }
    
        public virtual ObjectResult<asm_getLocations_Result> asm_getLocations(Nullable<int> parentId, Nullable<int> branchId)
        {
            var parentIdParameter = parentId.HasValue ?
                new ObjectParameter("parentId", parentId) :
                new ObjectParameter("parentId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("branchId", branchId) :
                new ObjectParameter("branchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<asm_getLocations_Result>("asm_getLocations", parentIdParameter, branchIdParameter);
        }
    
        public virtual ObjectResult<getAsset_Result> getAsset(Nullable<int> category, Nullable<int> location)
        {
            var categoryParameter = category.HasValue ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(int));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getAsset_Result>("getAsset", categoryParameter, locationParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<spCategory_Result> spCategory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCategory_Result>("spCategory");
        }
    
        public virtual ObjectResult<string> UserAuthentication(string email, string password)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UserAuthentication", emailParameter, passwordParameter);
        }
    
        public virtual ObjectResult<asm_addLocation_Result> asm_addLocation(string locationName, Nullable<int> parentID, Nullable<int> branchID)
        {
            var locationNameParameter = locationName != null ?
                new ObjectParameter("LocationName", locationName) :
                new ObjectParameter("LocationName", typeof(string));
    
            var parentIDParameter = parentID.HasValue ?
                new ObjectParameter("ParentID", parentID) :
                new ObjectParameter("ParentID", typeof(int));
    
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<asm_addLocation_Result>("asm_addLocation", locationNameParameter, parentIDParameter, branchIDParameter);
        }
    
        public virtual int asm_addAsset(Nullable<int> iD, Nullable<int> locationCode, Nullable<int> categoryCode, Nullable<int> purchaseId, Nullable<int> assetNumber, Nullable<System.DateTime> createdOn, Nullable<bool> isDeleted)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("iD", iD) :
                new ObjectParameter("iD", typeof(int));
    
            var locationCodeParameter = locationCode.HasValue ?
                new ObjectParameter("LocationCode", locationCode) :
                new ObjectParameter("LocationCode", typeof(int));
    
            var categoryCodeParameter = categoryCode.HasValue ?
                new ObjectParameter("CategoryCode", categoryCode) :
                new ObjectParameter("CategoryCode", typeof(int));
    
            var purchaseIdParameter = purchaseId.HasValue ?
                new ObjectParameter("PurchaseId", purchaseId) :
                new ObjectParameter("PurchaseId", typeof(int));
    
            var assetNumberParameter = assetNumber.HasValue ?
                new ObjectParameter("assetNumber", assetNumber) :
                new ObjectParameter("assetNumber", typeof(int));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("isDeleted", isDeleted) :
                new ObjectParameter("isDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("asm_addAsset", iDParameter, locationCodeParameter, categoryCodeParameter, purchaseIdParameter, assetNumberParameter, createdOnParameter, isDeletedParameter);
        }
    
        public virtual int asm_addCategory(string categoryName)
        {
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("CategoryName", categoryName) :
                new ObjectParameter("CategoryName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("asm_addCategory", categoryNameParameter);
        }
    
        public virtual int asm_addCurrecy(Nullable<int> iD, string currencyName, string currencyCode, string currencySymbol)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("iD", iD) :
                new ObjectParameter("iD", typeof(int));
    
            var currencyNameParameter = currencyName != null ?
                new ObjectParameter("CurrencyName", currencyName) :
                new ObjectParameter("CurrencyName", typeof(string));
    
            var currencyCodeParameter = currencyCode != null ?
                new ObjectParameter("CurrencyCode", currencyCode) :
                new ObjectParameter("CurrencyCode", typeof(string));
    
            var currencySymbolParameter = currencySymbol != null ?
                new ObjectParameter("CurrencySymbol", currencySymbol) :
                new ObjectParameter("CurrencySymbol", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("asm_addCurrecy", iDParameter, currencyNameParameter, currencyCodeParameter, currencySymbolParameter);
        }
    
        public virtual int asm_addRole(Nullable<int> iD, string roleName, Nullable<System.DateTime> createdOn, Nullable<bool> status, Nullable<bool> isDeleted)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("iD", iD) :
                new ObjectParameter("iD", typeof(int));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("isDeleted", isDeleted) :
                new ObjectParameter("isDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("asm_addRole", iDParameter, roleNameParameter, createdOnParameter, statusParameter, isDeletedParameter);
        }
    
        public virtual int asm_addSupplier(Nullable<int> iD, string supplierName, Nullable<System.DateTime> createdOn, string status, Nullable<bool> isDeleted)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("iD", iD) :
                new ObjectParameter("iD", typeof(int));
    
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("isDeleted", isDeleted) :
                new ObjectParameter("isDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("asm_addSupplier", iDParameter, supplierNameParameter, createdOnParameter, statusParameter, isDeletedParameter);
        }
    
        public virtual int asm_addUser(string userName, string password, string firstName, string lastName, string email, string phone, string mobile, string address, string designation)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var designationParameter = designation != null ?
                new ObjectParameter("Designation", designation) :
                new ObjectParameter("Designation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("asm_addUser", userNameParameter, passwordParameter, firstNameParameter, lastNameParameter, emailParameter, phoneParameter, mobileParameter, addressParameter, designationParameter);
        }
    
        public virtual int asm_addUserRole(Nullable<int> iD, Nullable<int> userId, Nullable<int> roleId, Nullable<System.DateTime> createdOn, Nullable<bool> status, Nullable<bool> isDeleted)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("iD", iD) :
                new ObjectParameter("iD", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("isDeleted", isDeleted) :
                new ObjectParameter("isDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("asm_addUserRole", iDParameter, userIdParameter, roleIdParameter, createdOnParameter, statusParameter, isDeletedParameter);
        }
    
        public virtual int asm_deleteAsset(Nullable<int> iD, Nullable<System.DateTime> modifiedOn, Nullable<System.DateTime> deletedOn, Nullable<bool> isDeleted)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("iD", iD) :
                new ObjectParameter("iD", typeof(int));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            var deletedOnParameter = deletedOn.HasValue ?
                new ObjectParameter("DeletedOn", deletedOn) :
                new ObjectParameter("DeletedOn", typeof(System.DateTime));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("isDeleted", isDeleted) :
                new ObjectParameter("isDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("asm_deleteAsset", iDParameter, modifiedOnParameter, deletedOnParameter, isDeletedParameter);
        }
    
        public virtual int asm_deleteCategory(Nullable<int> categoryCode, Nullable<System.DateTime> modifiedOn, Nullable<System.DateTime> deletedOn, Nullable<bool> isDeleted)
        {
            var categoryCodeParameter = categoryCode.HasValue ?
                new ObjectParameter("CategoryCode", categoryCode) :
                new ObjectParameter("CategoryCode", typeof(int));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            var deletedOnParameter = deletedOn.HasValue ?
                new ObjectParameter("DeletedOn", deletedOn) :
                new ObjectParameter("DeletedOn", typeof(System.DateTime));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("isDeleted", isDeleted) :
                new ObjectParameter("isDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("asm_deleteCategory", categoryCodeParameter, modifiedOnParameter, deletedOnParameter, isDeletedParameter);
        }
    
        public virtual int asm_deleteCurrency(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("iD", iD) :
                new ObjectParameter("iD", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("asm_deleteCurrency", iDParameter);
        }
    
        public virtual int asm_deleteLocation(Nullable<int> locationCode, Nullable<System.DateTime> modifiedOn, Nullable<System.DateTime> deletedOn, Nullable<bool> isDeleted)
        {
            var locationCodeParameter = locationCode.HasValue ?
                new ObjectParameter("LocationCode", locationCode) :
                new ObjectParameter("LocationCode", typeof(int));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            var deletedOnParameter = deletedOn.HasValue ?
                new ObjectParameter("DeletedOn", deletedOn) :
                new ObjectParameter("DeletedOn", typeof(System.DateTime));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("isDeleted", isDeleted) :
                new ObjectParameter("isDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("asm_deleteLocation", locationCodeParameter, modifiedOnParameter, deletedOnParameter, isDeletedParameter);
        }
    
        public virtual int asm_deleteRole(Nullable<int> iD, Nullable<System.DateTime> modifiedOn, Nullable<bool> isDeleted)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("iD", iD) :
                new ObjectParameter("iD", typeof(int));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("isDeleted", isDeleted) :
                new ObjectParameter("isDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("asm_deleteRole", iDParameter, modifiedOnParameter, isDeletedParameter);
        }
    
        public virtual int asm_deleteSupplier(Nullable<int> iD, Nullable<System.DateTime> modifiedOn, Nullable<System.DateTime> deletedOn, Nullable<bool> isDeleted)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            var deletedOnParameter = deletedOn.HasValue ?
                new ObjectParameter("DeletedOn", deletedOn) :
                new ObjectParameter("DeletedOn", typeof(System.DateTime));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("isDeleted", isDeleted) :
                new ObjectParameter("isDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("asm_deleteSupplier", iDParameter, modifiedOnParameter, deletedOnParameter, isDeletedParameter);
        }
    
        public virtual int asm_deleteUser(Nullable<int> iD, Nullable<System.DateTime> modifiedOn, Nullable<System.DateTime> deletedOn, Nullable<bool> isDeleted)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("iD", iD) :
                new ObjectParameter("iD", typeof(int));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            var deletedOnParameter = deletedOn.HasValue ?
                new ObjectParameter("DeletedOn", deletedOn) :
                new ObjectParameter("DeletedOn", typeof(System.DateTime));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("isDeleted", isDeleted) :
                new ObjectParameter("isDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("asm_deleteUser", iDParameter, modifiedOnParameter, deletedOnParameter, isDeletedParameter);
        }
    
        public virtual int asm_deleteUserRole(Nullable<int> iD, Nullable<System.DateTime> modifiedOn, Nullable<System.DateTime> deletedOn, Nullable<bool> isDeleted)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("iD", iD) :
                new ObjectParameter("iD", typeof(int));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            var deletedOnParameter = deletedOn.HasValue ?
                new ObjectParameter("DeletedOn", deletedOn) :
                new ObjectParameter("DeletedOn", typeof(System.DateTime));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("isDeleted", isDeleted) :
                new ObjectParameter("isDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("asm_deleteUserRole", iDParameter, modifiedOnParameter, deletedOnParameter, isDeletedParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> asm_isExistAsset(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("iD", iD) :
                new ObjectParameter("iD", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("asm_isExistAsset", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> asm_isExistCategory(Nullable<int> categoryCode)
        {
            var categoryCodeParameter = categoryCode.HasValue ?
                new ObjectParameter("CategoryCode", categoryCode) :
                new ObjectParameter("CategoryCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("asm_isExistCategory", categoryCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> asm_isExistCurrency(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("iD", iD) :
                new ObjectParameter("iD", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("asm_isExistCurrency", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> asm_isExistLocation(Nullable<int> locationCode)
        {
            var locationCodeParameter = locationCode.HasValue ?
                new ObjectParameter("LocationCode", locationCode) :
                new ObjectParameter("LocationCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("asm_isExistLocation", locationCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> asm_isExistRole(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("iD", iD) :
                new ObjectParameter("iD", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("asm_isExistRole", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> asm_isExistSupplier(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("iD", iD) :
                new ObjectParameter("iD", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("asm_isExistSupplier", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> asm_isExistUserRole(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("iD", iD) :
                new ObjectParameter("iD", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("asm_isExistUserRole", iDParameter);
        }
    
        public virtual int asm_updateAsset(Nullable<int> iD, Nullable<int> locationCode, Nullable<int> categoryCode, Nullable<int> purchaseId, Nullable<int> assetNumber, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn, Nullable<bool> isDeleted)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("iD", iD) :
                new ObjectParameter("iD", typeof(int));
    
            var locationCodeParameter = locationCode.HasValue ?
                new ObjectParameter("LocationCode", locationCode) :
                new ObjectParameter("LocationCode", typeof(int));
    
            var categoryCodeParameter = categoryCode.HasValue ?
                new ObjectParameter("CategoryCode", categoryCode) :
                new ObjectParameter("CategoryCode", typeof(int));
    
            var purchaseIdParameter = purchaseId.HasValue ?
                new ObjectParameter("PurchaseId", purchaseId) :
                new ObjectParameter("PurchaseId", typeof(int));
    
            var assetNumberParameter = assetNumber.HasValue ?
                new ObjectParameter("assetNumber", assetNumber) :
                new ObjectParameter("assetNumber", typeof(int));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("isDeleted", isDeleted) :
                new ObjectParameter("isDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("asm_updateAsset", iDParameter, locationCodeParameter, categoryCodeParameter, purchaseIdParameter, assetNumberParameter, createdOnParameter, modifiedOnParameter, isDeletedParameter);
        }
    
        public virtual int asm_updateCategory(Nullable<int> categoryCode, Nullable<int> locationCode, string categoryName, Nullable<int> parentId, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn, Nullable<bool> isDeleted)
        {
            var categoryCodeParameter = categoryCode.HasValue ?
                new ObjectParameter("CategoryCode", categoryCode) :
                new ObjectParameter("CategoryCode", typeof(int));
    
            var locationCodeParameter = locationCode.HasValue ?
                new ObjectParameter("LocationCode", locationCode) :
                new ObjectParameter("LocationCode", typeof(int));
    
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("CategoryName", categoryName) :
                new ObjectParameter("CategoryName", typeof(string));
    
            var parentIdParameter = parentId.HasValue ?
                new ObjectParameter("ParentId", parentId) :
                new ObjectParameter("ParentId", typeof(int));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("isDeleted", isDeleted) :
                new ObjectParameter("isDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("asm_updateCategory", categoryCodeParameter, locationCodeParameter, categoryNameParameter, parentIdParameter, createdOnParameter, modifiedOnParameter, isDeletedParameter);
        }
    
        public virtual int asm_updateCurrency(Nullable<int> iD, string currencyName, string currencyCode, string currencySymbol)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("iD", iD) :
                new ObjectParameter("iD", typeof(int));
    
            var currencyNameParameter = currencyName != null ?
                new ObjectParameter("CurrencyName", currencyName) :
                new ObjectParameter("CurrencyName", typeof(string));
    
            var currencyCodeParameter = currencyCode != null ?
                new ObjectParameter("CurrencyCode", currencyCode) :
                new ObjectParameter("CurrencyCode", typeof(string));
    
            var currencySymbolParameter = currencySymbol != null ?
                new ObjectParameter("CurrencySymbol", currencySymbol) :
                new ObjectParameter("CurrencySymbol", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("asm_updateCurrency", iDParameter, currencyNameParameter, currencyCodeParameter, currencySymbolParameter);
        }
    
        public virtual int asm_updateLocation(Nullable<int> locationCode, string locationName, Nullable<int> parentId, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn)
        {
            var locationCodeParameter = locationCode.HasValue ?
                new ObjectParameter("LocationCode", locationCode) :
                new ObjectParameter("LocationCode", typeof(int));
    
            var locationNameParameter = locationName != null ?
                new ObjectParameter("LocationName", locationName) :
                new ObjectParameter("LocationName", typeof(string));
    
            var parentIdParameter = parentId.HasValue ?
                new ObjectParameter("ParentId", parentId) :
                new ObjectParameter("ParentId", typeof(int));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("asm_updateLocation", locationCodeParameter, locationNameParameter, parentIdParameter, createdOnParameter, modifiedOnParameter);
        }
    
        public virtual int asm_updateRole(Nullable<int> iD, string roleName, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn, Nullable<bool> status, Nullable<bool> isDeleted)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("iD", iD) :
                new ObjectParameter("iD", typeof(int));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("isDeleted", isDeleted) :
                new ObjectParameter("isDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("asm_updateRole", iDParameter, roleNameParameter, createdOnParameter, modifiedOnParameter, statusParameter, isDeletedParameter);
        }
    
        public virtual int asm_updateSupplier(Nullable<int> iD, string supplierName, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn, string status, Nullable<bool> isDeleted)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("iD", iD) :
                new ObjectParameter("iD", typeof(int));
    
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("isDeleted", isDeleted) :
                new ObjectParameter("isDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("asm_updateSupplier", iDParameter, supplierNameParameter, createdOnParameter, modifiedOnParameter, statusParameter, isDeletedParameter);
        }
    
        public virtual int asm_updateUser(Nullable<int> iD, string userName, string password, string firstName, string lastName, string email, string phone, string mobile, string address, Nullable<int> pin, string designation, Nullable<System.DateTime> createdOn, Nullable<System.DateTime> modifiedOn, string status, Nullable<bool> isOnline, Nullable<bool> isDeleted)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("iD", iD) :
                new ObjectParameter("iD", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var pinParameter = pin.HasValue ?
                new ObjectParameter("Pin", pin) :
                new ObjectParameter("Pin", typeof(int));
    
            var designationParameter = designation != null ?
                new ObjectParameter("Designation", designation) :
                new ObjectParameter("Designation", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var isOnlineParameter = isOnline.HasValue ?
                new ObjectParameter("isOnline", isOnline) :
                new ObjectParameter("isOnline", typeof(bool));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("isDeleted", isDeleted) :
                new ObjectParameter("isDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("asm_updateUser", iDParameter, userNameParameter, passwordParameter, firstNameParameter, lastNameParameter, emailParameter, phoneParameter, mobileParameter, addressParameter, pinParameter, designationParameter, createdOnParameter, modifiedOnParameter, statusParameter, isOnlineParameter, isDeletedParameter);
        }
    
        public virtual int asm_updateUserRole(Nullable<int> iD, Nullable<int> userId, Nullable<int> roleId, Nullable<System.DateTime> createdOn, Nullable<bool> status, Nullable<System.DateTime> modifiedOn, Nullable<bool> isDeleted)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("iD", iD) :
                new ObjectParameter("iD", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("isDeleted", isDeleted) :
                new ObjectParameter("isDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("asm_updateUserRole", iDParameter, userIdParameter, roleIdParameter, createdOnParameter, statusParameter, modifiedOnParameter, isDeletedParameter);
        }
    
        public virtual ObjectResult<asm_getUsers_Result> asm_getUsers(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<asm_getUsers_Result>("asm_getUsers", userIDParameter);
        }
    
        public virtual ObjectResult<Testing_Result> Testing()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Testing_Result>("Testing");
        }
    
        public virtual ObjectResult<asm_getUsers1_Result> asm_getUsers1(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<asm_getUsers1_Result>("asm_getUsers1", userIDParameter);
        }
    
        public virtual ObjectResult<asm_getLocationdata_Result> asm_getLocationdata(Nullable<int> locationCode)
        {
            var locationCodeParameter = locationCode.HasValue ?
                new ObjectParameter("LocationCode", locationCode) :
                new ObjectParameter("LocationCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<asm_getLocationdata_Result>("asm_getLocationdata", locationCodeParameter);
        }
    
        public virtual ObjectResult<asm_getLocationdata1_Result1> asm_getLocationdata1(Nullable<int> locationCode)
        {
            var locationCodeParameter = locationCode.HasValue ?
                new ObjectParameter("LocationCode", locationCode) :
                new ObjectParameter("LocationCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<asm_getLocationdata1_Result1>("asm_getLocationdata1", locationCodeParameter);
        }
    
        public virtual ObjectResult<asm_getCategorydata_Result> asm_getCategorydata(Nullable<int> categoryCode)
        {
            var categoryCodeParameter = categoryCode.HasValue ?
                new ObjectParameter("CategoryCode", categoryCode) :
                new ObjectParameter("CategoryCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<asm_getCategorydata_Result>("asm_getCategorydata", categoryCodeParameter);
        }
    
        public virtual ObjectResult<asm_getCompanydata_Result> asm_getCompanydata(Nullable<int> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<asm_getCompanydata_Result>("asm_getCompanydata", companyIDParameter);
        }
    
        public virtual ObjectResult<asm_getAssetdata_Result> asm_getAssetdata(Nullable<int> assetID)
        {
            var assetIDParameter = assetID.HasValue ?
                new ObjectParameter("AssetID", assetID) :
                new ObjectParameter("AssetID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<asm_getAssetdata_Result>("asm_getAssetdata", assetIDParameter);
        }
    
        public virtual ObjectResult<asm_getBranchdata_Result> asm_getBranchdata(Nullable<int> branchCode)
        {
            var branchCodeParameter = branchCode.HasValue ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<asm_getBranchdata_Result>("asm_getBranchdata", branchCodeParameter);
        }
    
        public virtual ObjectResult<asm_getCompany_Result> asm_getCompany(Nullable<int> companyId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("companyId", companyId) :
                new ObjectParameter("companyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<asm_getCompany_Result>("asm_getCompany", companyIdParameter);
        }
    
        public virtual ObjectResult<asm_getCountry_Result> asm_getCountry(Nullable<int> countryId)
        {
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("countryId", countryId) :
                new ObjectParameter("countryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<asm_getCountry_Result>("asm_getCountry", countryIdParameter);
        }
    
        public virtual ObjectResult<asm_getBranch_Result> asm_getBranch(Nullable<int> companyId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<asm_getBranch_Result>("asm_getBranch", companyIdParameter);
        }
    
        public virtual ObjectResult<asm_getLocationTree_Result> asm_getLocationTree(Nullable<int> branchId)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("branchId", branchId) :
                new ObjectParameter("branchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<asm_getLocationTree_Result>("asm_getLocationTree", branchIdParameter);
        }
    
        public virtual ObjectResult<asm_getCategoryTree_Result> asm_getCategoryTree(Nullable<int> branchId)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("branchId", branchId) :
                new ObjectParameter("branchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<asm_getCategoryTree_Result>("asm_getCategoryTree", branchIdParameter);
        }
    
        public virtual ObjectResult<asm_getBranchTree_Result> asm_getBranchTree(Nullable<int> companyId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("companyId", companyId) :
                new ObjectParameter("companyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<asm_getBranchTree_Result>("asm_getBranchTree", companyIdParameter);
        }
    }
}
